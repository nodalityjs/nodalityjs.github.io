"use strict";(self.webpackChunknodality=self.webpackChunknodality||[]).push([[3832],{3148:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var a=n(5474),s=n(4848),r=n(8453);const o={slug:"first-blog-post",title:"Introducing Nodality",authors:["vabrousek"],tags:["nodality","ui","declarative"]},i=void 0,l={authorsImageUrls:[void 0]},c=[];function d(e){const t={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Nodality is a simple UI library written in JavaScript by Filip Vabrousek."}),"\n",(0,s.jsx)(t.p,{children:"It offers a novel and declarative approach to building responsive user interfaces.\nAt the heart of Nodality are two simple yet powerful ideas:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Elements"})," \u2013 These are the structural building blocks of your interface. Each element describes a part of the UI, such as a heading, paragraph, button, or image. Elements define what should be rendered."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Nodes"})," \u2013 These act as operations or transformations that modify the appearance, layout, or behavior of elements. Think of nodes as effects or instructions that \u201cwrap\u201d around your UI, enhancing it visually or interactively."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'let elements = [\n  {\n    type: "h1",\n    text: "Hello"\n  }\n];\n\nlet nodes = [\n  {\n    op: "blast" // blasts fill corlor fo the element away\n  }\n];\n\n'})}),"\n",(0,s.jsxs)(t.p,{children:["You then feed these arrays into ",(0,s.jsx)("code",{children:"Des"})," instance."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'new Des()\n  .nodes(nodes)\n  .add(elements)\n  .set({\n    mount: "#mount",\n    code: true\n  });\n'})}),"\n",(0,s.jsx)(t.p,{children:"The code then generates UI code you can then use directly in your website."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'new Text("Hello")\n  .set({\n    index: "0",\n    size: "S1",\n    font: "Arial",\n    stroke: { \n     op: {\n      name: "blast", \n      color: "green",\n      width: "1px"\n       } \n      },\n    })\n  .render("#home");\n'})}),"\n",(0,s.jsx)(t.p,{children:"The library is compatible with React and Vue and you can can get started using CDN or a single NPM command.\nTo get started, follow tutorial on this website. Let's make web a better place together!"})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5474:e=>{e.exports=JSON.parse('{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-07-02-Introducing-Nodality.md","source":"@site/blog/2025-07-02-Introducing-Nodality.md","title":"Introducing Nodality","description":"Nodality is a simple UI library written in JavaScript by Filip Vabrousek.","date":"2025-07-02T00:00:00.000Z","tags":[{"inline":true,"label":"nodality","permalink":"/blog/tags/nodality"},{"inline":true,"label":"ui","permalink":"/blog/tags/ui"},{"inline":true,"label":"declarative","permalink":"/blog/tags/declarative"}],"readingTime":1.06,"hasTruncateMarker":true,"authors":[{"name":"Filip Vabrousek","title":"Czech JS and Swift developer","url":"https://www.filipvabrousek.com","page":{"permalink":"/blog/authors/vabrousek"},"socials":{"x":"https://x.com/filipvabrousek","github":"https://github.com/filipvabrousek"},"imageURL":"https://avatars.githubusercontent.com/u/18376136?v=4","key":"vabrousek"}],"frontMatter":{"slug":"first-blog-post","title":"Introducing Nodality","authors":["vabrousek"],"tags":["nodality","ui","declarative"]},"unlisted":false}')},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var a=n(6540);const s={},r=a.createContext(s);function o(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);