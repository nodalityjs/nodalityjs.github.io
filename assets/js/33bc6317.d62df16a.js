"use strict";(self.webpackChunknodality=self.webpackChunknodality||[]).push([[6281],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(6540);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}},8964:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"guides/integration","title":"Integration","description":"You can easily integrate this library with React.js and Vue.js libraries.","source":"@site/docs/guides/integration.md","sourceDirName":"guides","slug":"/guides/integration","permalink":"/docs/guides/integration","draft":false,"unlisted":false,"editUrl":"https://github.com/nodalityjs/docs/edit/main/docs/guides/integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Tooling","permalink":"/docs/guides/tooling"},"next":{"title":"Testing","permalink":"/docs/guides/testing"}}');var s=t(4848),r=t(8453);const o={},i="Integration",c={},l=[{value:"React integration",id:"react-integration",level:2},{value:"Vue.js integration",id:"vuejs-integration",level:2},{value:"HelloWorld.vue",id:"helloworldvue",level:3}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"integration",children:"Integration"})}),"\n",(0,s.jsx)(n.p,{children:"You can easily integrate this library with React.js and Vue.js libraries."}),"\n",(0,s.jsx)(n.h2,{id:"react-integration",children:"React integration"}),"\n",(0,s.jsx)(n.p,{children:"To quickly scaffold a React app you can use:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx create-nodality-react@latest my-app\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"Extracted"})," component to integrate this library into your React application."]}),"\n",(0,s.jsx)(n.p,{children:"Here, you can see a more complex example that fetches data from API a displays them in List."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'import logo from \'./logo.svg\';\nimport \'./App.css\';\nimport {Text, Wrapper} from "nodality";\nimport {React} from "react";\nimport {useState, useRef, useEffect} from "react";\n\nfunction Extracted(props) {\n  let ref = useRef();\n\n  useEffect(() => {\n     let t = props.view;\n     ref.current.appendChild(t.render());\n     return () => {\n          if (ref.current) {\n              ref.current.innerHTML = "";\n          }\n      };\n }, [props]); \n return <div ref={ref} />;\n}\n\nfunction Wrappera({ setIsNav }) {\n  const [count, setCount] = useState(0);\n  return (\n      <Extracted\n          view={\n              new Wrapper().set({ background: "orange" }).add([\n                  new Text(`Counter ${count}`)\n                      .set({\n                          fluidc: "S1",\n                          font: "Arial",\n                          onTap: () => {\n                              setCount(count + 1);\n                              setIsNav && setIsNav(false);\n                          }\n                      })\n              ])\n          }\n      />\n  );\n}\n\nfunction Final({ setIsNav }) {\n  return (\n      <>\n          <Wrappera />\n          <Wrappera setIsNav={setIsNav}/>\n          <Wrappera setIsNav={setIsNav}/>\n      </>\n  );\n}\n\n\n\nfunction App() {\n  return (\n    <div className="App">    \n        <Final/>\n  );\n}\n\nexport default App;\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"vuejs-integration",children:"Vue.js integration"}),"\n",(0,s.jsx)(n.p,{children:"You can also integrate this library with Vue.js. Here is the complete example.\nTo quickly scaffold a Vue app you can use:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx create-nodality-vue@latest my-app\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'<template>\n  <HelloWorld :text="textInstance" v-model:msg="welcomeMessage"/>\n</template>\n\n<script>\nimport HelloWorld from \'./components/HelloWorld.vue\'\nimport {Text} from "nodality";\nexport default {\n  name: \'App\',\n  components: {\n    HelloWorld\n  },\n \n  watch: {\n    // Watch for changes to welcomeMessage and recreate the instance\n    welcomeMessage() {\n      console.log(this.welcomeMessage) // THIS WORKS\n       this.textInstance = new Text(this.welcomeMessage).set({ size: "S1", color: "#1abc9c" });\n    },\n  },\n  data() {\n    return {\n      welcomeMessage: "Welcome to Your Vue.js App", // Define a reactive property\n     textInstance: null\n    }\n  },\n  \n   created() {\n    // Initialize the Text instance when the component is created\n    this.textInstance = new Text(this.welcomeMessage).set({ size: "S1", color: "#1abc9c" });\n  },\n}\n<\/script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n  // 13:21:24 <slot> 26/04/2024\n'})}),"\n",(0,s.jsx)(n.h3,{id:"helloworldvue",children:"HelloWorld.vue"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'<script setup>\nimport { useTemplateRef, onMounted, defineProps, defineEmits, watch } from \'vue\'\n//import {Text} from "../lib/TextCopy.js";\n\n// Define props to accept the msg value\nconst props = defineProps({\n  msg: String,\n  text: Object\n}) \n\nconst emit = defineEmits([\'update:msg\'])\n\n// the first argument must match the ref value in the template\nconst input = useTemplateRef(\'my-input\')\nlet mycomp = useTemplateRef(\'my-comp\')\n\nonMounted(() => {\n  input.value.focus()\n let ela = props.text.render();//document.createElement("h1");\n mycomp.value.appendChild(ela);\n})\n\nwatch(() => props.msg, () => { // 12:21:57 Wow!!!\n\n mycomp.value.innerHTML = ""; // Clear existing content\n    const element = props.text.render(); // Call the render method\n    mycomp.value.appendChild(element);\n})\n\nfunction updateMessage(event) {\n  emit(\'update:msg\', event.target.value)\n}\n<\/script>\n\n<template>\n  <input ref="my-input" :value="msg" @input="updateMessage" />\n  <div ref="my-comp"/>\n</template>\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);