"use strict";(self.webpackChunknodality=self.webpackChunknodality||[]).push([[7169],{6835:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"basics/nodes","title":"Nodes","description":"Nodes allow you to simply you to modify the elements. Think of them as nodes in procedural software like Houdini. Every node generates code that is used on elements.","source":"@site/docs/basics/nodes.md","sourceDirName":"basics","slug":"/basics/nodes","permalink":"/docs/basics/nodes","draft":false,"unlisted":false,"editUrl":"https://github.com/nodalityjs/docs/edit/main/docs/basics/nodes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/basics/start"},"next":{"title":"Designer","permalink":"/docs/basics/designer"}}');var o=t(4848),i=t(8453);const d={},r="Nodes",l={},a=[{value:"Step 1: Defining a node",id:"step-1-defining-a-node",level:3},{value:"Step 2: Defining ranges",id:"step-2-defining-ranges",level:3},{value:"Step 3: Affecting specific elements",id:"step-3-affecting-specific-elements",level:3},{value:"Seeing it all together",id:"seeing-it-all-together",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"nodes",children:"Nodes"})}),"\n",(0,o.jsx)(n.p,{children:"Nodes allow you to simply you to modify the elements. Think of them as nodes in procedural software like Houdini. Every node generates code that is used on elements."}),"\n",(0,o.jsx)(n.h3,{id:"step-1-defining-a-node",children:"Step 1: Defining a node"}),"\n",(0,o.jsx)(n.p,{children:"Blast node allows you to create stroked text."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'let nodes = [\n   {\n      op: {\n            name: "blast",\n      }\n   }\n]\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you want, you can specify more options for your node like ",(0,o.jsx)(n.code,{children:"color"})," and ",(0,o.jsx)(n.code,{children:"width"})," for the ",(0,o.jsx)(n.code,{children:"blast"})," node."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'let nodes = [ \n    {\n        op: {\n            name: "blast",\n            color: "green",\n            width: "3px"\n        },\n    }\n]\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-2-defining-ranges",children:"Step 2: Defining ranges"}),"\n",(0,o.jsxs)(n.p,{children:["Breakpoints allow you to control the range where the node will take effect. You can use the ",(0,o.jsx)(n.code,{children:"range"})," key for this purpose. Range takes a form of array with two values Using ",(0,o.jsx)(n.code,{children:"range"})," is not mandatory."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'let nodes = [\n    {\n        op: {/*...*/}\n        range: ["600px", "700px"],\n    }\n]\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-3-affecting-specific-elements",children:"Step 3: Affecting specific elements"}),"\n",(0,o.jsxs)(n.p,{children:["You can also decide to affect specific elements. In this example, only element with ",(0,o.jsx)(n.code,{children:"id"})," ",(0,o.jsx)(n.code,{children:"#myID"})," will be affected.\nIf you don't supply any value to the ",(0,o.jsx)(n.code,{children:"target"})," property, all nodes for which this operations applies will be affected.\nThe ",(0,o.jsx)(n.code,{children:"id"})," property is not mandatory."]}),"\n",(0,o.jsx)(n.p,{children:"Let's define element with certain ID:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'let elements = [\n  {\n    type: "text",\n    id: "#first"\n  }\n];\n'})}),"\n",(0,o.jsxs)(n.p,{children:["We then use the ",(0,o.jsx)(n.code,{children:"target"})," property to affect only this element."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'let nodes = [\n    {\n\t\top: {/*...*/},\n\t\trange: [ /*...*/ ],\n\t\ttarget: ["#myID"]\n\t}\n];\n'})}),"\n",(0,o.jsx)(n.h3,{id:"seeing-it-all-together",children:"Seeing it all together"}),"\n",(0,o.jsxs)(n.p,{children:["The complete ",(0,o.jsx)(n.code,{children:"nodes"})," with blast node might look like this. Keep in mind that range and target properties are not mandatory."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'let elements = [\n  {\n     type: "text",\n     id: "#first"\n  }\n];\n\n\nlet nodes = [\n   {\n        range: ["600px", "700px"],\n        // rest of the code\n         op: {\n            name: "blast",\n            color: "green",\n            width: "3px"\n        },\n        target: "#myID"\n    }\n]\n'})}),"\n",(0,o.jsx)(n.p,{children:"Then, you can render the result as you are used to:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<div id="#mount"></div>\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'new Des()\n    .nodes(nodes)\n    .add(elements)\n    .set({\n        mount: "#mount",\n        code: true\n    });\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var s=t(6540);const o={},i=s.createContext(o);function d(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);